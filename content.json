{"pages":[{"title":"Kitchen Table Code","text":"이 블로그는식탁(Kitchen Table)에서 쉽게 하는코딩에 관한 내용입니다. 사용된 프로그래밍 언어 Javascript Typescript Vue React","link":"/about/index.html"}],"posts":[{"title":"javascriptSlider1","text":"Javascript 로 만든 슬라이더(Slider)정을수 강사님 강의를 참조함슬라이더(slider)는 캐로셀(Carousel)이라고도 불리는 요소로 여러 장의 이미지파일들을 나열해 회전하는 것처럼 보여준다. 먼저, Html 로 만든 구조를 만든다. 123456789101112131415161718192021&lt;body&gt; &lt;div class=&quot;slider_wrap&quot;&gt; &lt;div class=&quot;slider_box&quot;&gt; &lt;ul class=&quot;slider&quot;&gt; &lt;li&gt; &lt;img src=&quot;https://via.placeholder.com/800x200.png?text=1&quot; alt=&quot;&quot; /&gt; &lt;/li&gt; &lt;li&gt; &lt;img src=&quot;https://via.placeholder.com/800x200.png?text=2&quot; alt=&quot;&quot; /&gt; &lt;/li&gt; &lt;li&gt; &lt;img src=&quot;https://via.placeholder.com/800x200.png?text=3&quot; alt=&quot;&quot; /&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;arrow&quot;&gt; &lt;a href=&quot;&quot; class=&quot;prev&quot;&gt;이전&lt;/a&gt; &lt;a href=&quot;&quot; class=&quot;next&quot;&gt;다음&lt;/a&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; css로 슬라이더의 모양을 만든다. 123456789101112131415161718192021222324252627282930313233343536373839404142* { margin: 0; padding: 0;}a { text-decoration: none;}li { list-style: none;}.slider_wrap { width: 100%; max-width: 800px; margin: 0 auto; position: relative;}.slider_wrap &gt; .slider_box { overflow: hidden; position: relative; height: 200px;}.slider_wrap &gt; .slider_box .slider { position: absolute; top: 0; left: 0;}.slider_wrap &gt; .slider_box .slider &gt; li { float: left;}.slider_wrap &gt; .slider_box .slider &gt; li img { vertical-align: top;}.slider_wrap .arrow &gt; a.prev { position: absolute; left: -50px; top: 100px;}.slider_wrap .arrow &gt; a.next { position: absolute; right: -50px; top: 100px;}","link":"/2021/12/14/javascriptSlider1/"},{"title":"Javascrpt-Slider","text":"Javascript 로 만든 슬라이더(Slider)정을수 강사님 강의를 참조함슬라이더(slider)는 캐로셀(Carousel)이라고도 불리는 요소로 여러 장의 이미지파일들을 나열해 회전하는 것처럼 보여준다. Html 로 만든 구조위에 css 로 슬라이더의 기본 모양을 만등 후 javascript 에서 다룰 수 있도록 DOM 을 생성하고, 필요한 변수들을 선언한다. 내부에 2개의 a tag(“이전, “다음”)가 있는 버튼을 한개만 만들어 이벤트를 붙이면 버블링효과로 인해 코드가 훨씬 간결해 진다.또, 사진을 옯기는 방식도 slider {transform : translateX(800px)} 과 같은 방식보다 position 층으로 띄운 slider 의 left 값을 옮길 가로넓이 만큼 계산해서 주면 간결해진다. 12345678910111213141516171819202122232425262728293031// DOM 생성const sliderWrap = document.querySelector(&quot;.slider_wrap&quot;);const sliderBox = sliderWrap.querySelector(&quot;.slider_box&quot;);const slider = sliderBox.querySelector(&quot;.slider&quot;);const sliders = slider.querySelectorAll(&quot;li&quot;);const moveButton = sliderWrap.querySelector(&quot;.arrow&quot;);// 슬라이더 총길이 계산const liwidth = sliders[0].clientWidth;const liLength = sliders.length;const sliderLen = liwidth * liLength;slider.style.width = liwidth * liLength + &quot;px&quot;;let moveDist = 0;moveButton.addEventListener(&quot;click&quot;, moveSlide);function moveSlide(e) { e.preventDefault(); if (e.target.className === &quot;next&quot;) { // next 버튼을 누르면 현재 보고 있는 이미지는 왼쪽으로 이동하므로 // 즉, css로 position 층으로 띄운 slider 의 left 값을 음수를 줘서 // 현재 보고 있는 이미지를 왼쪽으로 이동시킨다. moveDist -= liwidth; slider.style.left = `${moveDist}px`; } else { // prev 버튼은 next의 반대로 moveDist += liwidth; slider.style.left = `${moveDist}px`; }} 그러나, 맨앞과 맨뒤 이미지에서 멈추게 되면, 슬라이더라고 할 수 없으니 다음화에서 고쳐보겠다.","link":"/2021/12/13/Javascrpt-Slider/"}],"tags":[{"name":"js","slug":"js","link":"/tags/js/"}],"categories":[]}